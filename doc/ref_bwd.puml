@startuml ref_bwd
title Basic workflow diagram v2
package Header <<Frame>> {
    object "MAKE_ENUM(...)" as RCE
    RCE : ENUM(enum name) or
    RCE : ENUMSCOPE(enum declaration, enum name)
    RCE : ---
    RCE : EMEMBER(member name) and/or
    RCE : EMEMBERVAL(member name, member value)
    RCE : .
    RCE : .
    RCE : .
}


package "Source Unit" <<Frame>> {
    object "REFLECT(...)" as REFLECT
    REFLECT : CLASS(class name declaration)
    REFLECT : ---
    REFLECT : MEMBER(...) and/or MEMBERNAME(...)
    REFLECT : .
    REFLECT : .
    REFLECT : .
    note top of REFLECT
        A macro for creating
        reflection definition
    end note

    object "REFLECT(...)" as BITREFLECT
    BITREFLECT : CLASS(class name declaration)
    BITREFLECT : ---
    BITREFLECT : BITMEMBER(...) and/or 
    BITREFLECT : BITMEMBERNAME(...)
    BITREFLECT : .
    BITREFLECT : .
    BITREFLECT : .
    note top of BITREFLECT
        A macro for creating
        bitfield reflection definition
    end note

    object "REFLECT(...)" as ENUREFLECT
    ENUREFLECT : ENUMERATION(enum name)
    ENUREFLECT : ---
    ENUREFLECT : ENUM_MEMBER(member name)
    ENUREFLECT : .
    ENUREFLECT : .
    ENUREFLECT : .
    note bottom of ENUREFLECT
        A macro for creating
        reflection for already
        defined enums
    end note

    node "Single call function" as SCF {
        object "RegisterReflectedTypes<...>()" as REFLECTOR_REGISTER
        REFLECTOR_REGISTER : classes and enums
    }
    note bottom of REFLECTOR_REGISTER
        A class factory for adding
        reflected classes and
        enums into global registry
    end note

    REFLECT -[hidden]left- BITREFLECT
    BITREFLECT -[hidden]down- ENUREFLECT
    ENUREFLECT -[hidden]left- SCF
}
@enduml
